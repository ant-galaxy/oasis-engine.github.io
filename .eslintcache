[{"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/Content/Article.tsx":"1","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/Content/AvatarList.tsx":"2","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/Content/BrowserFrame.tsx":"3","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/Content/EditButton.tsx":"4","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/Content/MainContent.tsx":"5","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/Content/Source.tsx":"6","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/Playground/CodeActions.tsx":"7","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/Playground/CodeSandbox.tsx":"8","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/Playground/Codepen.tsx":"9","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/Playground/DemoActions.tsx":"10","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/Playground/Stackblitz.tsx":"11","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/Playground/index.tsx":"12","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/home/Advantage.tsx":"13","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/home/Banner.tsx":"14","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/home/Cases.tsx":"15","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/home/Features.tsx":"16","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/home/PBRHelmet.tsx":"17","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/home/Partners.tsx":"18","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/home/Spine.tsx":"19","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/home/index.tsx":"20","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/layout/Footer.tsx":"21","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/layout/Header.tsx":"22","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/layout/Icon.tsx":"23","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/layout/index.tsx":"24","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/typedoc/Comment.tsx":"25","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/typedoc/Item.tsx":"26","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/typedoc/Kind.tsx":"27","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/typedoc/Menu.tsx":"28","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/typedoc/Module.tsx":"29","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/typedoc/Package.tsx":"30","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/typedoc/Signature.tsx":"31","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/typedoc/Source.tsx":"32","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/typedoc/Type.tsx":"33","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/typedoc/enum.tsx":"34","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/typedoc/interface.tsx":"35","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/utils.ts":"36","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/html.js":"37","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/locale/en-US.ts":"38","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/locale/zh-CN.ts":"39","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/pages/404.js":"40","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/pages/examples.tsx":"41","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/pages/gltf-viewer.tsx":"42","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/pages/index.tsx":"43","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/static/style.js":"44","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/templates/api.tsx":"45","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/templates/docs.tsx":"46","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/templates/playground.tsx":"47"},{"size":3356,"mtime":1638244173356,"results":"48","hashOfConfig":"49"},{"size":989,"mtime":1638244173356,"results":"50","hashOfConfig":"49"},{"size":350,"mtime":1638244173356,"results":"51","hashOfConfig":"49"},{"size":565,"mtime":1638244173356,"results":"52","hashOfConfig":"49"},{"size":10609,"mtime":1659014073814,"results":"53","hashOfConfig":"49"},{"size":481,"mtime":1638244173357,"results":"54","hashOfConfig":"49"},{"size":1605,"mtime":1638244173357,"results":"55","hashOfConfig":"49"},{"size":2121,"mtime":1638244173357,"results":"56","hashOfConfig":"49"},{"size":1525,"mtime":1638244173358,"results":"57","hashOfConfig":"49"},{"size":750,"mtime":1638244173358,"results":"58","hashOfConfig":"49"},{"size":1128,"mtime":1638244173358,"results":"59","hashOfConfig":"49"},{"size":1359,"mtime":1638244173358,"results":"60","hashOfConfig":"49"},{"size":889,"mtime":1638244173358,"results":"61","hashOfConfig":"49"},{"size":1536,"mtime":1659014073814,"results":"62","hashOfConfig":"49"},{"size":1493,"mtime":1638244173359,"results":"63","hashOfConfig":"49"},{"size":1565,"mtime":1638244173359,"results":"64","hashOfConfig":"49"},{"size":2073,"mtime":1659926273193,"results":"65","hashOfConfig":"49"},{"size":2573,"mtime":1638244173359,"results":"66","hashOfConfig":"49"},{"size":1850,"mtime":1659926273193,"results":"67","hashOfConfig":"49"},{"size":902,"mtime":1638244173359,"results":"68","hashOfConfig":"49"},{"size":4012,"mtime":1659014073815,"results":"69","hashOfConfig":"49"},{"size":13192,"mtime":1638244173359,"results":"70","hashOfConfig":"49"},{"size":206,"mtime":1638244173360,"results":"71","hashOfConfig":"49"},{"size":1884,"mtime":1638244173360,"results":"72","hashOfConfig":"49"},{"size":492,"mtime":1638244173360,"results":"73","hashOfConfig":"49"},{"size":5780,"mtime":1638244173360,"results":"74","hashOfConfig":"49"},{"size":1069,"mtime":1638244173360,"results":"75","hashOfConfig":"49"},{"size":1399,"mtime":1638244173360,"results":"76","hashOfConfig":"49"},{"size":962,"mtime":1638244173361,"results":"77","hashOfConfig":"49"},{"size":888,"mtime":1638244173361,"results":"78","hashOfConfig":"49"},{"size":0,"mtime":1638244173361,"results":"79","hashOfConfig":"49"},{"size":470,"mtime":1638244173361,"results":"80","hashOfConfig":"49"},{"size":0,"mtime":1638244173361,"results":"81","hashOfConfig":"49"},{"size":303,"mtime":1638244173361,"results":"82","hashOfConfig":"49"},{"size":1798,"mtime":1638244173361,"results":"83","hashOfConfig":"49"},{"size":2383,"mtime":1638244173361,"results":"84","hashOfConfig":"49"},{"size":3862,"mtime":1638244173361,"results":"85","hashOfConfig":"49"},{"size":5962,"mtime":1638244173362,"results":"86","hashOfConfig":"49"},{"size":6042,"mtime":1638244173362,"results":"87","hashOfConfig":"49"},{"size":599,"mtime":1638244173362,"results":"88","hashOfConfig":"49"},{"size":3711,"mtime":1638244173362,"results":"89","hashOfConfig":"49"},{"size":20331,"mtime":1659926273193,"results":"90","hashOfConfig":"49"},{"size":1115,"mtime":1638244173363,"results":"91","hashOfConfig":"49"},{"size":111,"mtime":1638244173365,"results":"92","hashOfConfig":"49"},{"size":2724,"mtime":1638244173366,"results":"93","hashOfConfig":"49"},{"size":3571,"mtime":1638244173366,"results":"94","hashOfConfig":"49"},{"size":2117,"mtime":1659926273194,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"g73m8f",{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":1,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":1,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":1,"fixableWarningCount":1,"source":"189"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200"},"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/Content/Article.tsx",[],"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/Content/AvatarList.tsx",[],"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/Content/BrowserFrame.tsx",["201"],"import React from 'react';\n\nexport default class BrowserFrame extends React.Component {\n  node: HTMLDivElement;\n\n  getNode = (n: HTMLDivElement) => {\n    this.node = n;\n  };\n\n  render() {\n    const { children } = this.props;\n    return (\n      <div ref={this.getNode} className=\"browser-mockup with-url\">\n        {children}\n      </div>\n    );\n  }\n}\n","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/Content/EditButton.tsx",[],"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/Content/MainContent.tsx",["202","203","204","205","206","207","208","209","210","211","212","213","214","215","216"],"/* eslint-disable eslint-comments/disable-enable-pair */\n/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable react/forbid-prop-types */\n/* eslint-disable no-plusplus */\nimport React from \"react\";\nimport { Link } from \"gatsby\";\nimport { ExportOutlined, LeftOutlined, MenuFoldOutlined, MenuUnfoldOutlined, RightOutlined } from \"@ant-design/icons\";\nimport { Badge, Row, Col, Menu } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport MobileMenu from \"rc-drawer-menu\";\nimport moment from \"moment\";\nimport Article from \"./Article\";\nimport type { MenuDataItem, IMenuData } from \"../utils\";\nimport { isZhCN, getMenuItems } from \"../utils\";\nimport type { IFrontmatterData } from \"../../templates/docs\";\nimport { version } from \"../../../siteconfig.json\";\n\nconst { SubMenu } = Menu;\n\nexport interface MainContentProps {\n  isMobile: boolean;\n  location: {\n    pathname: string;\n  };\n  menuList: MenuDataItem[];\n  localizedPageData: {\n    meta: IFrontmatterData;\n    toc: string | false;\n    content: string;\n  };\n}\n\ninterface MainContentState {\n  openKeys: string[];\n}\n\nfunction getActiveMenuItem(props: MainContentProps) {\n  const { pathname } = props.location;\n  if (pathname.endsWith(\"/\")) {\n    return pathname.substring(0, pathname.length - 1);\n  }\n  return pathname;\n}\n\nfunction getModuleDataWithProps(props: MainContentProps) {\n  const moduleData = props.menuList;\n  const isCN = isZhCN();\n  return moduleData.filter(({ filename }) => {\n    if (!filename) {\n      return false;\n    }\n    const includesCN = filename.includes(\"zh-CN\");\n    return isCN ? includesCN : !includesCN;\n  });\n}\n\nfunction isNotTopLevel(level: string) {\n  return level !== \"topLevel\";\n}\n\nexport default class MainContent extends React.PureComponent<MainContentProps, MainContentState> {\n  timer: number;\n\n  currentModule: string;\n\n  static contextTypes = {\n    intl: PropTypes.object.isRequired\n  };\n\n  constructor(props: MainContentProps) {\n    super(props);\n    this.state = {\n      openKeys: this.getSideBarOpenKeys(props) || []\n    };\n  }\n\n  componentDidMount() {\n    this.componentDidUpdate();\n  }\n\n  UNSAVE_componentWillReceiveProps(nextProps: MainContentProps) {\n    const openKeys = this.getSideBarOpenKeys(nextProps);\n    if (openKeys) {\n      this.setState({\n        openKeys\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    if (!window.location.hash) {\n      return;\n    }\n    const element = document.getElementById(decodeURIComponent(window.location.hash.replace(\"#\", \"\")));\n    setTimeout(() => {\n      if (element) {\n        element.scrollIntoView(true);\n      }\n    }, 100);\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timer);\n  }\n\n  getSideBarOpenKeys = (nextProps: MainContentProps) => {\n    const { pathname } = nextProps.location;\n    const moduleData = getModuleDataWithProps(nextProps);\n    const item = moduleData.find(({ slug }) => pathname.includes(slug));\n    if (item) {\n      return [item.type];\n    }\n    return [];\n  };\n\n  handleMenuOpenChange = (openKeys: string[]) => {\n    this.setState({\n      openKeys\n    });\n  };\n\n  convertFilename = (filename: string) => {\n    // const {\n    //   location: { pathname },\n    // } = this.props;\n    let newFilename = filename;\n\n    if (filename.includes(\"docs\")) {\n      newFilename = `/${version}${filename}`;\n    }\n\n    if (isZhCN() && !newFilename.includes(\"-cn\")) {\n      return `${newFilename}-cn`;\n    }\n    return newFilename;\n  };\n\n  generateMenuItem = ({ before = null, after = null }, item: MenuDataItem) => {\n    if (!item.title) {\n      return null;\n    }\n    const {\n      intl: { locale }\n    } = this.context as {\n      intl: {\n        locale: \"zh-CN\" | \"en-US\";\n      };\n    };\n    const text = [\n      <span key=\"english\">{item.title}</span>,\n      <span className=\"chinese\" key=\"chinese\">\n        {locale === \"zh-CN\" && item.subtitle}\n      </span>\n    ];\n\n    const { disabled } = item;\n\n    const child = !item.link ? (\n      <Link to={this.convertFilename(item.filename)}>\n        {before}\n        {text}\n        {after}\n      </Link>\n    ) : (\n      <a href={item.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"menu-item-link-outside\">\n        {before}\n        {text} <ExportOutlined />\n        {after}\n      </a>\n    );\n\n    return (\n      <Menu.Item key={this.convertFilename(item.filename)} disabled={disabled}>\n        {item.important ? <Badge dot={item.important}>{child}</Badge> : child}\n      </Menu.Item>\n    );\n  };\n\n  generateSubMenuItems = (obj?: IMenuData, footerNavIcons = {}) => {\n    if (!obj) {\n      return [];\n    }\n    const topLevel = ((obj.topLevel as MenuDataItem[]) || []).map(this.generateMenuItem.bind(this, footerNavIcons));\n    const lang = isZhCN() ? \"zh-CN\" : \"en-US\";\n    const order = {\n      \"zh-CN\": [\n        \"快速入门\",\n        \"核心\",\n        \"图形\",\n        \"动画\",\n        \"物理\",\n        \"交互\",\n        \"资源\",\n        \"性能调试\",\n        \"工具库\",\n        \"平台适配\",\n        \"美术\",\n        \"编辑器\"\n      ],\n      \"en-US\": [\n        \"Introduction\",\n        \"Core\",\n        \"Graphics\",\n        \"Animation\",\n        \"Physics\",\n        \"Interact\",\n        \"Resource\",\n        \"Performance\",\n        \"Tool\",\n        \"Adaptation\",\n        \"Art\",\n        \"Editor\"\n      ]\n    };\n\n    const groupOrder = {\n      快速入门: [\"基础\", \"进阶\"],\n      图形: [\"摄像机\", \"渲染器组件\", \"网格\", \"材质\", \"纹理\", \"光照\", \"2D\"],\n      美术: [\"规范\", \"教程\"],\n      编辑器: [\"介绍\", \"基础操作\", \"资产\", \"组件\", \"脚本\", \"发布\"],\n\n      Introduction: [\"Basic\", \"Advanced\"],\n      Graphics: [\"Camera\", \"Renderer\", \"Mesh\", \"Material\", \"Texture\", \"Light\", \"2D\"],\n      \"Function Modules\": [\"Animation\", \"Physics\", \"Interact\", \"Resource Management\"]\n    };\n\n    const sortItems = (items) => {\n      if (!items) {\n        return;\n      }\n\n      return (items as MenuDataItem[])\n        .sort((a, b) => {\n          if (\"time\" in a && \"time\" in b) {\n            return moment(b.time).valueOf() - moment(a.time).valueOf();\n          }\n          if (\"order\" in a && \"order\" in b) {\n            return a.order - b.order;\n          }\n          return a.title.charCodeAt(0) - b.title.charCodeAt(0);\n        })\n        .map(this.generateMenuItem.bind(this, footerNavIcons));\n    };\n\n    const itemGroups = Object.keys(obj)\n      .filter(isNotTopLevel)\n      .sort((a, b) => order[lang].findIndex((item) => item === a) - order[lang].findIndex((item) => item === b))\n      .map((type) => {\n        const itemOrders = groupOrder[type];\n        const items = obj[type];\n        if (itemOrders) {\n          const itemsMap = {};\n\n          for (let i = 0; i < items.length; i++) {\n            const item = items[i];\n            const { group } = item;\n            if (!itemsMap[group]) {\n              itemsMap[group] = [];\n            }\n\n            itemsMap[group].push(item);\n          }\n\n          const groupItems = itemOrders.map((group) => {\n            const sortedItems = sortItems(itemsMap[group]);\n\n            return (\n              <Menu.ItemGroup key={group} title={group}>\n                {sortedItems}\n              </Menu.ItemGroup>\n            );\n          });\n\n          return (\n            <SubMenu title={type} key={type}>\n              {groupItems}\n            </SubMenu>\n          );\n        }\n\n        const groupItems = sortItems(items);\n\n        return (\n          <SubMenu title={type} key={type}>\n            {groupItems}\n          </SubMenu>\n        );\n      });\n    return [...topLevel, ...itemGroups];\n  };\n\n  getMenuItems = (footerNavIcons = {}) => {\n    const moduleData = getModuleDataWithProps(this.props);\n    const {\n      intl: { locale }\n    } = this.context;\n    const menuItems: IMenuData = getMenuItems(moduleData, locale) || {};\n    const topLevel = this.generateSubMenuItems(menuItems.topLevel as IMenuData, footerNavIcons) || [];\n\n    const result = [...topLevel].filter(({ key }) => key);\n    return result;\n  };\n\n  getPreAndNext = (menuItems: any) => {\n    const {\n      localizedPageData: {\n        meta: { filename }\n      }\n    } = this.props;\n\n    const list =\n      menuItems.length && !menuItems[0].props.children.length\n        ? menuItems\n        : Object.keys(menuItems).reduce((pre, key) => pre.concat(menuItems[key].props.children), []);\n    const index = list.findIndex((item: { key: string }) => item.key === filename || item.key === `${filename}-cn`);\n\n    if (index === -1) {\n      return {};\n    }\n    return {\n      previous: list[index - 1],\n      next: list[index + 1]\n    };\n  };\n\n  render() {\n    const { localizedPageData, isMobile } = this.props;\n\n    const activeMenuItem = getActiveMenuItem(this.props);\n    const menuItems = this.getMenuItems();\n    const currentItem = this.getPreAndNext(menuItems);\n    const { next, previous } = currentItem;\n    const mainContainerClass = classNames(\"main-container\", {});\n    const { openKeys } = this.state;\n    const menuChild = (\n      <Menu\n        className=\"aside-container\"\n        mode=\"inline\"\n        openKeys={openKeys}\n        selectedKeys={[activeMenuItem]}\n        onOpenChange={this.handleMenuOpenChange}\n      >\n        {menuItems}\n      </Menu>\n    );\n    return (\n      <div className=\"main-wrapper\">\n        <Row>\n          {isMobile ? (\n            <MobileMenu\n              iconChild={[<MenuUnfoldOutlined />, <MenuFoldOutlined />]}\n              key=\"mobile-menu\"\n              wrapperClassName=\"drawer-wrapper\"\n            >\n              {menuChild}\n            </MobileMenu>\n          ) : (\n            <Col xxl={4} xl={5} lg={6} md={24} sm={24} xs={24} className=\"main-menu\">\n              {menuChild}\n            </Col>\n          )}\n          <Col xxl={20} xl={19} lg={18} md={24} sm={24} xs={24}>\n            <div className={mainContainerClass}>\n              <Article {...this.props} content={localizedPageData} />\n            </div>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg={{ span: 20, offset: 4 }} md={24} sm={24} xs={24}>\n            <section className=\"prev-next-nav\">\n              {previous ? (\n                <div className=\"prev-page\">\n                  <LeftOutlined className=\"footer-nav-icon-before\" />\n                  {previous.props.children}\n                </div>\n              ) : null}\n              {next ? (\n                <div className=\"next-page\">\n                  {next.props.children}\n                  <RightOutlined className=\"footer-nav-icon-after\" />\n                </div>\n              ) : null}\n            </section>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/Content/Source.tsx",["217"],"import React from 'react';\nimport { GithubOutlined } from '@ant-design/icons';\nimport { Tooltip } from 'antd';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nfunction Source(props: any) {\n  return props.src ? \n  <span>\n    <a href={props.src} target=\"_blank\" className=\"doc-source\">\n        <Tooltip title={<FormattedMessage id=\"app.docs.source\" />}>\n          <GithubOutlined />\n        </Tooltip>\n    </a>\n  </span>\n     : null;\n}\n\nexport default injectIntl(Source);","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/Playground/CodeActions.tsx",[],"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/Playground/CodeSandbox.tsx",[],"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/Playground/Codepen.tsx",[],"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/Playground/DemoActions.tsx",["218"],"import React from 'react';\nimport {\n  QrcodeOutlined,\n  ChromeOutlined \n} from '@ant-design/icons';\nimport { Tooltip } from 'antd';\nimport QRCode from 'qrcode.react';\n\nexport default function DemoActions (props: any) {\n  // const [copy, setCopy] = useState('Copy');\n\n  return (\n    <div className=\"code-box-actions code-box-actions-demo\">\n      <div className=\"code-box-action code-box-qrcode\">\n        <Tooltip title={<QRCode value={props.url} />} color=\"#fff\" placement=\"bottom\">\n          <QrcodeOutlined />\n        </Tooltip>\n      </div>\n      <div className=\"code-box-action\">\n        <Tooltip title=\"在浏览器中打开\">\n          <a href={props.url} target=\"_blank\"><ChromeOutlined /></a>\n        </Tooltip>\n      </div>\n    </div>\n  );\n}\n","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/Playground/Stackblitz.tsx",[],"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/Playground/index.tsx",[],"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/home/Advantage.tsx",[],"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/home/Banner.tsx",[],"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/home/Cases.tsx",[],"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/home/Features.tsx",[],"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/home/PBRHelmet.tsx",["219"],"import { OrbitControl } from \"@oasis-engine-toolkit/controls\";\nimport { AmbientLight, AssetType, Camera, DirectLight, GLTFResource, Vector3, WebGLEngine } from \"oasis-engine\";\nimport React, { useEffect } from \"react\";\n\nexport default function PBRHelmet() {\n  useEffect(() => {\n    const engine = init();\n\n    return () => {\n      engine.destroy();\n    };\n  }, []);\n\n  return <canvas id=\"canvas-pbr-helmet\" style={{ width: \"400px\", height: \"400px\" }} />;\n}\n\nfunction init(): WebGLEngine {\n  // -- create engine object\n  const engine = new WebGLEngine(\"canvas-pbr-helmet\");\n  engine.canvas.resizeByClientSize();\n\n  const scene = engine.sceneManager.activeScene;\n  const rootEntity = scene.createRootEntity();\n\n  const directLightNode = rootEntity.createChild(\"dir_light\");\n  const directLightNode2 = rootEntity.createChild(\"dir_light2\");\n  directLightNode.addComponent(DirectLight);\n  directLightNode2.addComponent(DirectLight);\n\n  directLightNode.transform.setRotation(30, 0, 0);\n  directLightNode2.transform.setRotation(-30, 180, 0);\n\n  // -- create camera\n  const cameraNode = rootEntity.createChild(\"camera_node\");\n  cameraNode.transform.setPosition(0, 0, 3);\n  cameraNode.addComponent(Camera);\n  scene.background.solidColor.set(51 / 255, 51 / 255, 51 / 255, 1);\n  const controls = cameraNode.addComponent(OrbitControl);\n  controls.enableZoom = false;\n  controls.autoRotate = true;\n  controls.autoRotateSpeed = 0.02;\n\n  engine.run();\n\n  engine.resourceManager\n    .load<GLTFResource>(\"https://gw.alipayobjects.com/os/bmw-prod/150e44f6-7810-4c45-8029-3575d36aff30.gltf\")\n    .then((gltf) => {\n      /* eslint no-param-reassign: [\"error\", { \"props\": false }] */\n      gltf.defaultSceneRoot.transform.position = new Vector3(0, 0.1, 0);\n      rootEntity.addChild(gltf.defaultSceneRoot);\n    });\n\n  engine.resourceManager\n    .load<AmbientLight>({\n      type: AssetType.Env,\n      url: \"https://gw.alipayobjects.com/os/bmw-prod/37f204c2-bc5b-4344-a368-8251bbeb0717.bin\"\n    })\n    .then((ambientLight) => {\n      scene.ambientLight = ambientLight;\n    });\n\n  return engine;\n}\n","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/home/Partners.tsx",[],"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/home/Spine.tsx",[],"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/home/index.tsx",[],"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/layout/Footer.tsx",[],"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/layout/Header.tsx",["220","221","222","223","224","225","226","227"],"import React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Link } from 'gatsby';\nimport { AppstoreAddOutlined, HomeOutlined, MenuOutlined, NotificationOutlined, PlayCircleOutlined, ReadOutlined, SearchOutlined, ZhihuOutlined, TwitterOutlined, YuqueOutlined } from '@ant-design/icons';\nimport { Row, Col, Select, Input, Menu, Popover, Button } from 'antd';\nimport * as utils from '../utils';\nimport { version } from '../../../siteconfig.json';\nimport { Icon } from './Icon';\n\nconst { Option } = Select;\n\nconst LOGO_URL = 'https://gw.alipayobjects.com/mdn/rms_d27172/afts/img/A*w3sZQpMix18AAAAAAAAAAAAAARQnAQ';\n\nlet docSearch: (config: any) => void;\nif (typeof window !== 'undefined') {\n  // eslint-disable-next-line global-require\n  docSearch = require('docsearch.js');\n}\n\nfunction initDocSearch() {\n  if (!docSearch) {\n    return;\n  }\n  docSearch({\n    apiKey: '6cea501a58304e81c8e9d028a1d995e9',\n    indexName: 'oasisengine',\n    inputSelector: '#search-box input',\n    algoliaOptions: {\n      facetFilters: [\n        `version:${version}`\n      ]\n    },\n    transformData(\n      hits: {\n        url: string;\n      }[],\n    ) {\n      hits.forEach((hit) => {\n        // eslint-disable-next-line  no-param-reassign\n        hit.url = hit.url.replace('oasisengine.cn', window.location.host);\n        // eslint-disable-next-line  no-param-reassign\n        hit.url = hit.url.replace('https:', window.location.protocol);\n      });\n      return hits;\n    },\n    debug: false, // Set debug to true if you want to inspect the dropdown\n  });\n}\n\ninterface HeaderProps {\n  isMobile: boolean;\n  intl: any;\n  location: {\n    pathname: string;\n  };\n  showVersion?: boolean;\n}\ninterface HeaderState {\n  inputValue?: string;\n  menuVisible: boolean;\n  menuMode?: 'vertical' | 'vertical-left' | 'vertical-right' | 'horizontal' | 'inline';\n  searchOption?: any[];\n  searching?: boolean;\n  versions?: string[]\n}\n\nclass Header extends React.Component<HeaderProps, HeaderState> {\n  searchInput: Input | null | undefined;\n\n  timer: number;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuVisible: false,\n      menuMode: props.isMobile ? 'inline' : 'horizontal',\n      versions: []\n    };\n  }\n\n  async componentDidMount() {\n    const { searchInput } = this;\n    const { intl: { locale } } = this.props;\n\n    this.redirect();\n\n    document.addEventListener('keyup', (event) => {\n      if (event.keyCode === 83 && event.target === document.body) {\n        if (searchInput) {\n          searchInput.focus();\n        }\n      }\n    });\n\n    initDocSearch(locale === 'zh-CN' ? 'cn' : 'en');\n\n    // Fetch version from remote config\n    const versionConfig = 'https://render.alipay.com/p/h5data/oasis-version_site-doc-versions-h5data.json';\n    const versions = await fetch(versionConfig).then((e) => e.json());\n\n    if (versions) {\n      this.setState({ versions: versions.map((v) => v.version) })\n    }\n  }\n\n  componentDidUpdate(preProps: HeaderProps) {\n    const { isMobile } = this.props;\n    if (isMobile !== preProps.isMobile) {\n      this.setMenuMode(isMobile);\n    }\n  }\n\n  redirect() {\n    const { pathname } = window.location;\n    const isPathNameZhCN = /-cn\\/?$/.test(pathname);\n    const isZhCN = utils.isZhCN();\n\n    if (this.isNotMarkdownPage(pathname)) {\n      return;\n    }\n\n    if (isZhCN !== isPathNameZhCN) {\n      this.replacePathName(pathname, isZhCN);\n    }\n  }\n\n  setMenuMode = (isMobile: boolean) => {\n    this.setState({ menuMode: isMobile ? 'inline' : 'horizontal' });\n  };\n\n  handleHideMenu = () => {\n    this.setState({\n      menuVisible: false,\n    });\n  };\n\n  handleShowMenu = () => {\n    this.setState({\n      menuVisible: true,\n    });\n  };\n\n  onMenuVisibleChange = (visible: boolean) => {\n    this.setState({\n      menuVisible: visible,\n    });\n  };\n\n  handleSelect = (value: string) => {\n    window.location.href = value;\n  };\n\n  replacePathName = (pathname: string, isZhCN: boolean) => {\n    const currentProtocol = `${window.location.protocol}//`;\n    const currentHref = window.location.href.substr(currentProtocol.length);\n\n    window.location.href = currentProtocol + currentHref.replace(\n      window.location.pathname,\n      utils.getLocalizedPathname(pathname, isZhCN),\n    )\n  }\n\n  isNotMarkdownPage(pathname: string) {\n    return pathname === '/' || /api/.test(pathname) || /gltf-viewer/.test(pathname) || /examples/.test(pathname);\n  }\n\n  handleLangChange = () => {\n    const {\n      location: { pathname },\n    } = this.props;\n\n    const isPathNameZhCN = /-cn\\/?$/.test(pathname);\n    const isZhCN = utils.isZhCN();\n\n    window.localStorage.setItem('locale', isZhCN ? 'en-US' : 'zh-CN');\n\n    if (this.isNotMarkdownPage(pathname)) {\n      window.location.reload();\n      return;\n    }\n\n    if (isZhCN && isPathNameZhCN) {\n      this.replacePathName(pathname, false);\n      return;\n    }\n    if (!isZhCN && !isPathNameZhCN) {\n      this.replacePathName(pathname, true);\n    }\n  };\n\n  onVersionChange = (value: string) => {\n    const versionReg = /\\/(\\d+[.]\\d+[^/]*)\\//;\n    const matchedResult = window.location.href.match(versionReg);\n\n    if (matchedResult && matchedResult[1]) {\n      window.location.href = window.location.href.replace(matchedResult[1], value);\n    }\n  };\n\n  render() {\n    const { menuMode, menuVisible } = this.state;\n    const { location, intl } = this.props;\n    const path = location.pathname;\n    const { formatMessage } = intl;\n\n    const module = location.pathname\n      .replace(/(^\\/|\\/$)/g, '')\n      .split('/')\n      .slice(0, -1)\n      .join('/');\n    let activeMenuItem = module || 'home';\n\n    if (/docs/.test(path)) {\n      if (/docs\\/editor[-]/.test(path)) {\n        activeMenuItem = 'editor-docs';\n      } else if (/docs\\/artist[-]/.test(path)) {\n        activeMenuItem = 'artist-docs';\n      } else {\n        activeMenuItem = 'engine-docs';\n      }\n    } else if (/api/.test(path)) {\n      activeMenuItem = 'api';\n    } else if (/examples/.test(path)) {\n      activeMenuItem = 'examples';\n    } else if (/gltf-viewer/.test(path)) {\n      activeMenuItem = 'gltfviewer';\n    } else if (path === '/') {\n      activeMenuItem = 'home';\n    }\n\n    const isZhCN = intl.locale === 'zh-CN';\n\n    const menu = [\n      <Menu mode={menuMode} selectedKeys={[activeMenuItem]} id=\"nav\" key=\"nav\">\n        <Menu.Item key=\"home\" icon={<HomeOutlined />}>\n          <Link to=\"/\">\n            <FormattedMessage id=\"app.header.menu.home\" />\n          </Link>\n        </Menu.Item>\n        <Menu.SubMenu key=\"docs\" icon={<ReadOutlined />} title={formatMessage({ id: \"app.header.menu.docs\" })}>\n          <Menu.ItemGroup title={formatMessage({ id: \"app.header.menu.engine\" })}>\n            <Menu.Item key=\"engine-docs\">\n              <Link to={utils.getLocalizedPathname(`${version}/docs/install`, isZhCN)}>\n                {formatMessage({ id: \"app.header.menu.engine.docs\" })}\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"api\">\n              <Link to={`/${version}/api/core/index`}>\n                API\n              </Link>\n            </Menu.Item>\n          </Menu.ItemGroup>\n          <Menu.ItemGroup title={formatMessage({ id: \"app.header.menu.artist\" })}>\n            <Menu.Item key=\"artist-docs\">\n              <Link to={utils.getLocalizedPathname(`/${version}/docs/artist-bake`, isZhCN)}>\n                {formatMessage({ id: \"app.header.menu.artist.docs\" })}\n              </Link>\n            </Menu.Item>\n          </Menu.ItemGroup>\n          {isZhCN &&\n            <Menu.ItemGroup title={formatMessage({ id: \"app.header.menu.editor\" })}>\n              <Menu.Item key=\"editor-docs\">\n                <Link to={utils.getLocalizedPathname(`/${version}/docs/editor`, isZhCN)}>\n                  {formatMessage({ id: \"app.header.menu.editor.docs\" })}\n                </Link>\n              </Menu.Item>\n            </Menu.ItemGroup>\n          }\n        </Menu.SubMenu>\n        <Menu.Item key=\"examples\" icon={<PlayCircleOutlined />}>\n          <Link to={`/${version}/examples`}>\n            <FormattedMessage id=\"app.header.menu.engine.examples\" />\n          </Link>\n        </Menu.Item>\n        <Menu.SubMenu key=\"ecosystem\" icon={<AppstoreAddOutlined />} title={formatMessage({ id: \"app.header.menu.ecosystem\" })}>\n          <Menu.ItemGroup title={formatMessage({ id: \"app.header.menu.ecosystem.tool\" })}>\n            <Menu.Item key=\"miniprogram\">\n              <Link to={utils.getLocalizedPathname(`/${version}/docs/miniprogram`, isZhCN)}>\n                {formatMessage({ id: \"app.header.menu.ecosystem.miniprogram\" })}\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"gltfviewer\">\n              <Link to={`/gltf-viewer`}>\n                {formatMessage({ id: \"app.header.menu.ecosystem.gltfviewer\" })}\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"createapp\">\n              <Link to=\"https://github.com/oasis-engine/create-oasis-app\" target=\"_blank\">\n                {formatMessage({ id: \"app.header.menu.ecosystem.createapp\" })}\n              </Link>\n            </Menu.Item>\n            {isZhCN &&\n              <Menu.Item key=\"editor\">\n                <Link to=\"https://oasis.alipay.com/editor\" target=\"_blank\">\n                  {formatMessage({ id: \"app.header.menu.ecosystem.editor\" })}\n                </Link>\n              </Menu.Item>\n            }\n          </Menu.ItemGroup>\n          <Menu.ItemGroup title={formatMessage({ id: \"app.header.menu.ecosystem.animation\" })}>\n            <Menu.Item key=\"spine\">\n              <Link to={utils.getLocalizedPathname(`/${version}/docs/spine`, isZhCN)}>\n                Spine\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"lottie\">\n              <Link to={utils.getLocalizedPathname(`/${version}/docs/lottie`, isZhCN)}>\n                Lottie\n              </Link>\n            </Menu.Item>\n          </Menu.ItemGroup>\n        </Menu.SubMenu>\n        <Menu.SubMenu key=\"community\" icon={<NotificationOutlined />} title={formatMessage({ id: \"app.header.menu.community\" })}>\n          <Menu.Item key=\"zhihu\" icon={<ZhihuOutlined />}>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.zhihu.com/column/c_1369047387231592448\">\n              <FormattedMessage id=\"app.community.zhihu\" />\n            </a>\n          </Menu.Item>\n          <Menu.Item key=\"juejin\" icon={<Icon type=\"icon-juejin\" />}>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://juejin.cn/team/6930507995474313230/posts\">\n              <FormattedMessage id=\"app.community.juejin\" />\n            </a>\n          </Menu.Item>\n          <Menu.Item key=\"yuque\" icon={<YuqueOutlined />}>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.yuque.com/oasis-engine/blog\">\n              <FormattedMessage id=\"app.community.yuque\" />\n            </a>\n          </Menu.Item>\n          <Menu.Item key=\"twitter\" icon={<TwitterOutlined />}>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/OasisEngine\">\n              <FormattedMessage id=\"app.community.twitter\" />\n            </a>\n          </Menu.Item>\n        </Menu.SubMenu>\n      </Menu>\n    ];\n\n\n    return (\n      <div>\n        <div id=\"header\" className=\"header\">\n          {menuMode === 'inline' ? (\n            <Popover\n              overlayClassName=\"popover-menu\"\n              placement=\"bottomRight\"\n              content={menu}\n              trigger=\"click\"\n              visible={menuVisible}\n              arrowPointAtCenter\n              onVisibleChange={this.onMenuVisibleChange}\n            >\n              <MenuOutlined className=\"nav-phone-icon\" onClick={this.handleShowMenu} />\n            </Popover>\n          ) : null}\n          <Row>\n            <Col xxl={4} xl={5} lg={8} md={8} sm={24} xs={24}>\n              <Link id=\"logo\" to=\"/\">\n                <img src={LOGO_URL} alt=\"Oasis Engine\" />\n              </Link>\n            </Col>\n            <Col xxl={20} xl={19} lg={16} md={16} sm={0} xs={0}>\n              <div id=\"search-box\">\n                <SearchOutlined />\n                <Input\n                  ref={(ref) => {\n                    this.searchInput = ref;\n                  }}\n                  placeholder={intl.formatMessage({ id: 'app.header.search' })}\n                />\n              </div>\n              <div className=\"header-meta\">\n                <div className=\"right-header\">\n                  <div id=\"lang\">\n                    <Button onClick={this.handleLangChange} size=\"small\">\n                      <FormattedMessage id=\"app.header.lang\" />\n                    </Button>\n                  </div>\n                  {(this.state.versions.length && this.props.showVersion) ? <Select size=\"small\" onChange={this.onVersionChange} value={version}>\n                    {this.state.versions.map((v) => {\n                      return <Option value={v} key={v}>{`v${v}`}</Option>\n                    })}\n                  </Select> : null}\n                </div>\n                {menuMode === 'horizontal' ? <div id=\"menu\">{menu}</div> : null}\n              </div>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(Header);\n","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/layout/Icon.tsx",[],"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/layout/index.tsx",[],"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/typedoc/Comment.tsx",[],"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/typedoc/Item.tsx",["228"],"import React from 'react';\nimport { Row, Col } from 'antd';\nimport Kind from './Kind';\nimport type { IItem, ISignature, IType, IParameter } from './interface';\nimport Source from './Source';\nimport Comment from './Comment';\nimport { Kinds } from './enum';\nimport { Element } from 'react-scroll';\n\nfunction Type(props: IType) {\n  const reference = props.id ?\n      <a href={props.name}>{props.name}</a> :\n      // Link to MDN Doc if it is a native API.\n      <a href={`https://developer.mozilla.org/en-US/search?q=${props.name}`} target=\"_blank\">{props.name}</a>\n    \n  return <span>\n    <i>{props.type === 'reference' ? reference : props.name}</i>\n    {props.type === 'array' && <span>[]</span>}\n  </span>\n}\n\nfunction Parameter(props: IParameter) {\n  return <li>\n    <h4 title={props.name}>\n      {props.flags.isOptional && <span className=\"tsd-flag\">optional</span>}\n      <strong>{props.name}</strong>\n    </h4>\n    {props.comment && <p> {props.comment?.text}</p>}\n  </li>\n}\n\nfunction GetSignature(props: ISignature) {\n  const { type } = props;\n\n  return <div className=\"tsd-signature\">\n    <span className=\"tsd-signature-symbol\">get </span>\n    {props.name}(): {type.type === \"typeOperator\" ?\n      <TypeOperator {...type} /> :\n      <Type {...type} />\n    }\n  </div>\n}\n\nfunction TypeOperator(props: IType) {\n  return <span>\n    <i className=\"tsd-signature-type\">{props.operator} </i>\n    {props.target && (props.target.type === 'array' ?\n      <span>\n        &lt;\n        <Type {...props.target?.elementType} />\n        []&gt;\n      </span> :\n      <Type {...props.target?.elementType} />\n    )}\n  </span>\n}\n\nfunction SetSignature(props: ISignature) {\n  return <div className=\"tsd-signature\">\n    <span className=\"tsd-signature-symbol\">set </span>\n    {props.name}({\n      props.parameters && <Type {...props.parameters[0].type} />\n    }): void\n  </div>\n}\n\nfunction Property(props: IItem) {\n  return <div className=\"tsd-signature\">\n    {props.type && <>\n      <strong>{props.name}</strong>: {props.type && <Type {...props.type} />}\n      {props.defaultValue && <span> = {props.defaultValue}</span>}\n    </>}\n  </div>\n}\n\nfunction ConstructorSignature(props: ISignature) {\n  return <div className=\"tsd-signature\">\n    <strong>{props.name}</strong>(\n    {props.parameters?.map((p, i) => {\n      return <span key={p.id}>\n        {i !== 0 && ', '}\n        {p.name}: <Type {...p.type} />\n      </span>\n    })})\n  </div>\n}\n\nfunction TypeParameter(props: IType) {\n  return <span><i>&lt;</i>T extends <Type {...props} /><i>&gt;</i></span>\n}\n\nfunction ParameterElement(p: IParameter) {\n  let element = null;\n\n  if (p.type?.type === 'reflection') {\n    element = <i>T</i>;\n  }\n  else if (p.type?.elementType?.type === 'reference') {\n    element = <span><i>{p.type.elementType.name}</i>{p.type.type === 'array' && <span>[]</span>}</span>\n  }\n  else {\n    element = <Type {...p.type} />\n  }\n  return <span>\n    {p.index !== 0 && ', '}\n    {p.name}: {element}\n  </span>\n}\n\nfunction ReturnElement(props: ISignature) {\n  if (!props.type) {\n    return <span>void</span>\n  }\n  return props.typeParameter ?\n    <span>\n      <Type name={props.type.name} />\n      {props.type.type === 'array' && <span><i>{props.type.elementType && <Type name={props.type.elementType?.name} />}</i>[]</span>}\n    </span> : <Type {...props.type} />\n\n}\n\nfunction MethodSignature(props: ISignature) {\n  return <div className=\"tsd-signature\">\n    <strong>{props.name}</strong>\n    {props.typeParameter && props.typeParameter[0] && <TypeParameter {...props.typeParameter[0].type} />}\n    ({props.parameters?.map((p, i) => {\n      return <ParameterElement key={p.id} {...p} index={i} />\n    })}): <ReturnElement {...props} />\n  </div>\n}\n\nfunction Description(props: ISignature) {\n  const { parameters, comment, kind } = props;\n\n  return <div className=\"tsd-description\">\n    {kind !== Kinds.SET_SIGNATURE && comment && <Comment {...comment} />}\n    {parameters && <div className=\"tsd-parameters\">\n      <h3>Parameters</h3>\n      <ul className=\"tsd-parameters-list\">\n        {parameters.map((p) => {\n          return <Parameter key={p.id} {...p} />\n        })}\n      </ul>\n    </div>\n    }\n    {comment && comment.returns && <div>\n      <h3>Returns</h3>\n      {comment.returns}\n    </div>\n    }\n  </div>\n}\n\nexport default function Item(props: IItem) {\n  const { kind } = props;\n  // console.log('Item props', props)\n  return <Element name={props.name} className=\"tsd-panel-anchor\">\n    <section className=\"tsd-panel\" key={props.id}>\n      <h2 title={props.name}>\n        <a href={`#${props.name}`}><Kind {...props} /></a>\n        &nbsp;\n        {props.flags?.isReadonly && <span className=\"tsd-flag\">ReadOnly</span>}\n        {props.sources?.map((source) => {\n          return <Source key={source.fileName} {...source} />\n        })}\n      </h2>\n      {props.type && <Property {...props} />}\n      {(kind === Kinds.CONSTRUCTOR || kind === Kinds.FUNCTION) && props.signatures?.map((signature) => {\n        return <div key={signature.id}>\n          <ConstructorSignature {...signature} />\n          <Description key={signature.id} {...signature} />\n        </div>\n      })}\n      {props.kind === Kinds.METHOD && props.signatures?.map((signature) => {\n        return <div key={signature.id} >\n          <MethodSignature {...signature} />\n          <Description {...signature} />\n        </div>\n      })}\n      <Row>\n        {props.getSignature && <Col span={12}>\n          <GetSignature {...props.getSignature[0]} />\n          <Description {...props.getSignature[0]} />\n        </Col>}\n        {props.setSignature && <Col span={12}>\n          <SetSignature {...props.setSignature[0]} />\n        </Col>}\n      </Row>\n      {!props.getSignature && props.comment && <Comment {...props.comment} />}\n    </section>\n  </Element>\n};","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/typedoc/Kind.tsx",[],"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/typedoc/Menu.tsx",[],"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/typedoc/Module.tsx",[],"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/typedoc/Package.tsx",[],"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/typedoc/Signature.tsx",[],"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/typedoc/Source.tsx",["229"],"import React from 'react';\nimport type { ISource } from './interface';\nimport { GithubOutlined } from '@ant-design/icons';\nimport siteConfig from '../../../siteconfig.json';\n\nexport default function Source(source: ISource) {\n  const url = source.fileName.replace('engine/', siteConfig.engineSource);\n  if (url.endsWith('.d.ts')) {\n    return null;\n  }\n\n  return source && <a href={`${url}#L${source.line}`} target=\"_blank\" className=\"tsc-source\"><GithubOutlined /></a>\n}","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/typedoc/Type.tsx",[],"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/typedoc/enum.tsx",[],"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/typedoc/interface.tsx",[],"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/components/utils.ts",[],"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/html.js",["230"],"// eslint-disable-next-line eslint-comments/disable-enable-pair\n/* eslint-disable react/no-danger */\nimport React from 'react';\nimport { version } from '../siteconfig.json';\n\nexport default function HTML(props) {\n  return (\n    <html {...props.htmlAttributes}>\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta httpEquiv=\"x-ua-compatible\" content=\"ie=edge\" />\n        <link\n          rel=\"icon\"\n          href=\"https://gw.alipayobjects.com/mdn/rms_d27172/afts/img/A*mXcgQ7ZHThAAAAAAAAAAAAAAARQnAQ\"\n          type=\"image/x-icon\"\n        />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\n        <meta name=\"docsearch:version\" content={version} />\n        <meta name=\"twitter:image:src\" content=\"https://gw.alipayobjects.com/mdn/rms_d27172/afts/img/A*c7W4TIDU-p0AAAAAAAAAAAAAARQnAQ\" />\n        <meta name=\"twitter:site\" content=\"@OasisEngine\" />\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content=\"Oasis Engine\" />\n        <meta name=\"twitter:description\" content=\"Oasis is a web-first and mobile-first high-performance real-time development platform. See for more information.\" />\n        <meta property=\"og:image\" content=\"https://gw.alipayobjects.com/mdn/rms_d27172/afts/img/A*c7W4TIDU-p0AAAAAAAAAAAAAARQnAQ\" />\n        <meta property=\"og:image:alt\" content=\"Oasis Engine - Oasis is a web-first and mobile-first high-performance real-time development platform. See for more information.\" />\n        <meta property=\"og:image:width\" content=\"1200\" />\n        <meta property=\"og:image:height\" content=\"600\" />\n        <meta property=\"og:site_name\" content=\"oasisengine\" />\n        <meta property=\"og:type\" content=\"object\" />\n        <meta property=\"og:title\" content=\"Oasis Engine\" />\n        <meta property=\"og:url\" content=\"https://oasisengine.cn\" />\n        <meta property=\"og:description\" content=\"Oasis Engine - Oasis is a web-first and mobile-first high-performance real-time development platform. See for more information.\" />\n        <script\n          dangerouslySetInnerHTML={{\n            __html: `\n            !function(t,e,a,r,c){t.TracertCmdCache=t.TracertCmdCache||[],t[c]=window[c]||\n            {_isRenderInit:!0,call:function(){t.TracertCmdCache.push(arguments)},\n            start:function(t){this.call('start',t)}},t[c].l=new Date;\n            var n=e.createElement(a),s=e.getElementsByTagName(a)[0];\n            n.async=!0,n.src=r,s.parentNode.insertBefore(n,s);\n            n.onerror=function(){console.warn(decodeURI('Tracert%20%E8%84%9A%E6%9C%AC%E6%9C%AA%E6%88%90%E5%8A%9F%E5%8A%A0%E8%BD%BD,%20%E8%AF%B7%E6%A3%80%E6%9F%A5%E7%BD%91%E7%BB%9C%E4%BB%A5%E5%8F%8A%20A%20%E4%BD%8D%E6%98%AF%E5%90%A6%E5%9C%A8%E4%B9%9D%E8%89%B2%E9%B9%BF%E5%BB%BA%E7%AB%8B%E6%B4%9E%E5%AF%9F'));\n            var fallback=function(){console.warn(decodeURI('Tracert%20%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E5%A4%B1%E8%B4%A5%EF%BC%8C%E8%AF%B7%E6%A3%80%E6%9F%A5%20JS%20%E6%98%AF%E5%90%A6%E6%AD%A3%E7%A1%AE%E5%BC%95%E5%85%A5'))};\n            for(var fnlist=[\"call\",\"start\",\"config\",\"logPv\",\"info\",\"err\",\"click\",\"expo\",\"pageName\",\"pageState\",\"time\",\"timeEnd\",\"parse\",\"checkExpo\",\"stringify\",\"report\",\"set\",\"before\"],i=0;i<fnlist.length;i++){t[c][fnlist[i]]=fallback}};\n            }(window,document,'script','https://ur.alipay.com/tracert_a1638.js','Tracert');\n            Tracert.start({});\n          `,\n          }}\n        />\n        {props.headComponents}\n      </head>\n      <body {...props.bodyAttributes} style={{margin: 0}}>\n        {props.preBodyComponents}\n        <noscript key=\"noscript\" id=\"gatsby-noscript\">\n          This app works best with JavaScript enabled.\n        </noscript>\n        <div key=\"body\" id=\"___gatsby\" dangerouslySetInnerHTML={{ __html: props.body }} />\n        {props.postBodyComponents}\n      </body>\n    </html>\n  );\n}\n","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/locale/en-US.ts",[],"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/locale/zh-CN.ts",[],"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/pages/404.js",[],"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/pages/examples.tsx",[],"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/pages/gltf-viewer.tsx",["231","232","233","234","235","236","237","238","239","240","241","242","243"],"/* eslint-disable no-console */\n/* eslint no-multi-assign: \"off\" */\n/* eslint no-param-reassign: [\"error\", { \"props\": false }] */\n/* eslint no-underscore-dangle: 0 */\nimport { DecodeMode, downloadArrayBuffer, IBLBaker, SphericalHarmonics3Baker, toBuffer } from \"@oasis-engine/baker\";\nimport { OrbitControl } from \"@oasis-engine-toolkit/controls\";\nimport {\n  AmbientLight,\n  AnimationClip,\n  Animator,\n  AssetType,\n  BackgroundMode,\n  BoundingBox,\n  Camera,\n  Color,\n  DirectLight,\n  Entity,\n  GLTFResource,\n  Material,\n  MeshRenderer,\n  PBRBaseMaterial,\n  PBRMaterial,\n  PBRSpecularMaterial,\n  PrimitiveMesh,\n  Renderer,\n  Scene,\n  SkyBoxMaterial,\n  SphericalHarmonics3,\n  Texture2D,\n  TextureCube,\n  UnlitMaterial,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\nimport React, { useEffect } from \"react\";\nimport WrapperLayout from \"../components/layout\";\nimport \"./gltf-viewer.less\";\n\nconst envList = {\n  sunset: \"https://gw.alipayobjects.com/os/bmw-prod/89c54544-1184-45a1-b0f5-c0b17e5c3e68.bin\",\n  pisa: \"https://gw.alipayobjects.com/os/bmw-prod/6470ea5e-094b-4a77-a05f-4945bf81e318.bin\",\n  park: \"https://gw.alipayobjects.com/os/bmw-prod/37f204c2-bc5b-4344-a368-8251bbeb0717.bin\",\n  foot_2K: \"https://gw.alipayobjects.com/os/bmw-prod/23c1893a-fe29-4e91-bd6a-bb1c4201a876.bin\"\n};\n\nclass Oasis {\n  static guiToColor(gui: number[], color: Color) {\n    color.set(gui[0] / 255, gui[1] / 255, gui[2] / 255, color.a);\n  }\n\n  static colorToGui(color: Color = new Color(1, 1, 1)): number[] {\n    const v = [];\n    v[0] = color.r * 255;\n    v[1] = color.g * 255;\n    v[2] = color.b * 255;\n    return v;\n  }\n\n  textures: Record<string, Texture2D> = {};\n  env: Record<string, AmbientLight> = {};\n\n  engine: WebGLEngine = new WebGLEngine(\"canvas-gltf-viewer\", { alpha: true });\n  scene: Scene = this.engine.sceneManager.activeScene;\n  skyMaterial: SkyBoxMaterial = new SkyBoxMaterial(this.engine);\n\n  // Entity\n  rootEntity: Entity = this.scene.createRootEntity(\"root\");\n  cameraEntity: Entity = this.rootEntity.createChild(\"camera\");\n  gltfRootEntity: Entity = this.rootEntity.createChild(\"gltf\");\n  lightEntity1: Entity = this.rootEntity.createChild(\"light1\");\n  lightEntity2: Entity = this.rootEntity.createChild(\"light2\");\n\n  // Component\n  camera: Camera = this.cameraEntity.addComponent(Camera);\n  controler: OrbitControl = this.cameraEntity.addComponent(OrbitControl);\n  light1: DirectLight = this.lightEntity1.addComponent(DirectLight);\n  light2: DirectLight = this.lightEntity2.addComponent(DirectLight);\n\n  // Debug\n  gui = new window.dat.GUI();\n  materialFolder = null;\n  animationFolder = null;\n  sceneFolder = null;\n  lightFolder = null;\n  state = {\n    // Scene\n    background: true,\n    // Lights\n    env: \"park\",\n    lights: true,\n    lightColor1: Oasis.colorToGui(new Color(1, 1, 1)),\n    lightColor2: Oasis.colorToGui(new Color(1, 1, 1)),\n    lightIntensity1: 1,\n    lightIntensity2: 1\n  };\n  _materials: Material[] = [];\n\n  // temporary\n  _boundingBox: BoundingBox = new BoundingBox();\n  _center: Vector3 = new Vector3();\n  _extent: Vector3 = new Vector3();\n\n  // DOM\n  $spinner = document.getElementById(\"spinner\");\n  $dropZone = document.getElementById(\"dropZone\");\n  $input = document.getElementById(\"input\");\n\n  constructor() {\n    const guiStyle = this.gui.domElement.style;\n    guiStyle.position = \"relative\";\n    guiStyle.top = \"68px\";\n    guiStyle.right = \"-12px\";\n\n    this.loadEnv(this.state.env).then(() => {\n      this.initScene();\n      this.initDropZone();\n      this.addSceneGUI();\n      this.initDefaultDebugMesh();\n    });\n  }\n\n  loadEnv(envName: string) {\n    return new Promise((resolve) => {\n      this.engine.resourceManager\n        .load<AmbientLight>({\n          type: AssetType.Env,\n          url: envList[envName]\n        })\n        .then((env) => {\n          this.env[envName] = env;\n\n          this.scene.ambientLight = env;\n          this.skyMaterial.textureCubeMap = env.specularTexture;\n          this.skyMaterial.textureDecodeRGBM = true;\n          resolve(true);\n        });\n    });\n  }\n\n  initScene() {\n    this.engine.canvas.resizeByClientSize();\n    this.controler.minDistance = 0;\n\n    // debug sync\n    if (this.state.background) {\n      this.scene.background.mode = BackgroundMode.Sky;\n    }\n    if (!this.state.lights) {\n      this.light1.enabled = this.light2.enabled = false;\n    }\n    this.light1.intensity = this.state.lightIntensity1;\n    this.light2.intensity = this.state.lightIntensity2;\n    this.lightEntity1.transform.setRotation(-45, 0, 0);\n    this.lightEntity2.transform.setRotation(-45, 180, 0);\n    this.scene.background.solidColor = new Color(0, 0, 0, 0);\n    this.scene.background.sky.material = this.skyMaterial;\n    this.scene.background.sky.mesh = PrimitiveMesh.createCuboid(this.engine, 1, 1, 1);\n    this.engine.run();\n\n    window.onresize = () => {\n      this.engine.canvas.resizeByClientSize();\n    };\n  }\n\n  addSceneGUI() {\n    const { gui } = this;\n    // Display controls.\n    if (this.sceneFolder) {\n      gui.removeFolder(this.sceneFolder);\n    }\n    if (this.sceneFolder) {\n      gui.removeFolder(this.lightFolder);\n    }\n    this.sceneFolder = gui.addFolder(\"Scene\");\n    this.sceneFolder.add(this.state, \"background\").onChange((v: boolean) => {\n      if (v) {\n        this.scene.background.mode = BackgroundMode.Sky;\n      } else {\n        this.scene.background.mode = BackgroundMode.SolidColor;\n      }\n    });\n\n    // Lighting controls.\n    this.lightFolder = gui.addFolder(\"Lighting\");\n    this.lightFolder\n      .add(this.state, \"env\", [...Object.keys(envList)])\n      .name(\"IBL\")\n      .onChange((v) => {\n        this.loadEnv(v);\n      });\n\n    this.lightFolder.add(this.state, \"lights\").onChange((v) => {\n      this.light1.enabled = this.light2.enabled = v;\n    });\n    this.lightFolder.addColor(this.state, \"lightColor1\").onChange((v) => {\n      Oasis.guiToColor(v, this.light1.color);\n    });\n    this.lightFolder.addColor(this.state, \"lightColor2\").onChange((v) => {\n      Oasis.guiToColor(v, this.light2.color);\n    });\n    this.lightFolder.add(this.state, \"lightIntensity1\", 0, 2).onChange((v) => {\n      this.light1.intensity = v;\n    });\n    this.lightFolder.add(this.state, \"lightIntensity2\", 0, 2).onChange((v) => {\n      this.light2.intensity = v;\n    });\n\n    this.sceneFolder.open();\n    this.lightFolder.open();\n  }\n\n  initDefaultDebugMesh() {\n    const mesh = PrimitiveMesh.createSphere(this.engine, 5, 64);\n    const material = new PBRMaterial(this.engine);\n    material.metallic = 1;\n    material.roughness = 0;\n    material.name = \"default\";\n    const renderer = this.gltfRootEntity.addComponent(MeshRenderer);\n\n    renderer.mesh = mesh;\n    renderer.setMaterial(material);\n\n    this.addMaterialGUI([material]);\n    this.setCenter([renderer]);\n  }\n\n  setCenter(renderers: Renderer[]) {\n    const boundingBox = this._boundingBox;\n    const center = this._center;\n    const extent = this._extent;\n\n    boundingBox.min.set(0, 0, 0);\n    boundingBox.max.set(0, 0, 0);\n\n    renderers.forEach((renderer) => {\n      BoundingBox.merge(renderer.bounds, boundingBox, boundingBox);\n    });\n    boundingBox.getExtent(extent);\n    const size = extent.length();\n\n    boundingBox.getCenter(center);\n    this.controler.target.set(center.x, center.y, center.z);\n    this.cameraEntity.transform.setPosition(center.x, center.y, size * 3);\n\n    this.camera.farClipPlane = size * 12;\n    this.camera.nearClipPlane = size / 100;\n\n    this.controler.maxDistance = size * 10;\n  }\n\n  initDropZone() {\n    const dropCtrl = new window.SimpleDropzone.SimpleDropzone(document.body, this.$input);\n    dropCtrl.on(\"drop\", ({ files }) => this.loadFileMaps(files));\n  }\n\n  loadFileMaps(files: Map<string, File>) {\n    const modelReg = /\\.(gltf|glb)$/i;\n    const imgReg = /\\.(jpg|jpeg|png)$/i;\n    const envReg = /\\.(hdr|hdri)$/i;\n\n    let mainFile: File;\n    let type = \"gltf\";\n\n    const filesMap = {}; // [fileName]:LocalUrl\n    const fileArray: any = Array.from(files); // ['/*/*.*',obj:File]\n\n    fileArray.some((f) => {\n      const file = f[1];\n      if (modelReg.test(file.name)) {\n        type = RegExp.$1;\n        mainFile = file;\n        return true;\n      }\n\n      return false;\n    });\n\n    fileArray.forEach((f) => {\n      const file = f[1];\n      if (!modelReg.test(file.name)) {\n        const url = URL.createObjectURL(file);\n        const fileName = file.name;\n        filesMap[fileName] = url;\n        if (imgReg.test(fileName)) {\n          this.addTexture(fileName, url);\n        } else if (envReg.test(fileName)) {\n          this.addEnv(fileName, url);\n        }\n      }\n    });\n\n    if (mainFile) {\n      this.dropStart();\n      const url = URL.createObjectURL(mainFile);\n      this.loadModel(url, filesMap, type as any);\n    }\n  }\n\n  loadModel(url: string, filesMap: Record<string, string>, type: \"gltf\" | \"glb\") {\n    this.destoryGLTF();\n\n    // replace relative path\n    if (type.toLowerCase() === \"gltf\") {\n      this.engine.resourceManager\n        .load({\n          type: AssetType.JSON,\n          url\n        })\n        .then((gltf: any) => {\n          gltf.buffers.concat(gltf.images).forEach((item) => {\n            if (!item) return;\n            let { uri } = item;\n            if (uri) {\n              let index = uri.lastIndexOf(\"/\");\n              if (index > -1) {\n                uri = uri.substr(index + 1);\n              }\n              if (filesMap[uri]) {\n                item.uri = filesMap[uri];\n              }\n            }\n          });\n          const blob = new Blob([JSON.stringify(gltf)]);\n          const urlNew = URL.createObjectURL(blob);\n          this.engine.resourceManager\n            .load<GLTFResource>({\n              type: AssetType.Prefab,\n              url: `${urlNew}#.gltf`\n            })\n            .then((asset) => {\n              this.handleGltfResource(asset);\n            })\n            .catch(() => {\n              this.dropError();\n            });\n        });\n    } else {\n      this.engine.resourceManager\n        .load<GLTFResource>({\n          type: AssetType.Prefab,\n          url: `${url}#.glb`\n        })\n        .then((asset) => {\n          this.handleGltfResource(asset);\n        })\n        .catch(() => {\n          this.dropError();\n        });\n    }\n  }\n\n  handleGltfResource(asset: GLTFResource) {\n    const { defaultSceneRoot, materials, animations } = asset;\n    console.log(asset);\n    this.dropSuccess();\n    this.gltfRootEntity = defaultSceneRoot;\n    this.rootEntity.addChild(defaultSceneRoot);\n\n    const meshRenderers = [];\n    defaultSceneRoot.getComponentsIncludeChildren(MeshRenderer, meshRenderers);\n\n    this.setCenter(meshRenderers);\n    this.addMaterialGUI(materials);\n    this.loadAnimationGUI(animations);\n  }\n\n  addTexture(name: string, url: string) {\n    const repeat = Object.keys(this.textures).find((textureName) => textureName === name);\n    if (repeat) {\n      console.warn(`${name} 已经存在，请更换图片名字重新上传`);\n      return;\n    }\n    this.engine.resourceManager\n      .load<Texture2D>({\n        type: AssetType.Texture2D,\n        url\n      })\n      .then((texture) => {\n        this.textures[name] = texture;\n        this.addMaterialGUI();\n        console.log(\"图片上传成功！\", name);\n      });\n  }\n\n  async addEnv(name: string, url: string) {\n    const texture = await this.engine.resourceManager.load<TextureCube>({\n      url,\n      type: \"HDR-RGBE\" // from baker\n    });\n\n    const bakedHDRCubeMap = IBLBaker.fromTextureCubeMap(texture, DecodeMode.RGBE);\n    const sh = new SphericalHarmonics3();\n    SphericalHarmonics3Baker.fromTextureCubeMap(texture, DecodeMode.RGBE, sh);\n    const arrayBuffer = toBuffer(bakedHDRCubeMap, sh);\n    downloadArrayBuffer(arrayBuffer, name);\n\n    // update debuger\n    const blob = new Blob([arrayBuffer], { type: \"text/plain\" });\n    const bakeUrl = URL.createObjectURL(blob);\n    this.state.env = name;\n    envList[name] = bakeUrl;\n    this.loadEnv(name);\n    this.addSceneGUI();\n    this.addMaterialGUI();\n  }\n\n  dropStart() {\n    this.$dropZone.classList.add(\"hide\");\n    this.$spinner.classList.remove(\"hide\");\n  }\n\n  dropError() {\n    this.$dropZone.classList.remove(\"hide\");\n    this.$spinner.classList.add(\"hide\");\n  }\n\n  dropSuccess() {\n    this.$dropZone.classList.add(\"hide\");\n    this.$spinner.classList.add(\"hide\");\n  }\n\n  destoryGLTF() {\n    this.gltfRootEntity.destroy();\n  }\n\n  addMaterialGUI(materials?: Material[]) {\n    const { gui } = this;\n    if (this.materialFolder) {\n      gui.removeFolder(this.materialFolder);\n      this.materialFolder = null;\n    }\n\n    const _materials = materials || this._materials;\n    this._materials = _materials;\n    if (!_materials.length) return;\n\n    const folder = (this.materialFolder = gui.addFolder(\"Material\"));\n    const folderName = {};\n\n    _materials.forEach((material) => {\n      if (!(material instanceof PBRBaseMaterial) && !(material instanceof UnlitMaterial)) return;\n      if (!material.name) {\n        material.name = \"default\";\n      }\n      const state = {\n        opacity: material.baseColor.a,\n        baseColor: Oasis.colorToGui(material.baseColor),\n        emissiveColor: Oasis.colorToGui((material as PBRBaseMaterial).emissiveColor),\n        specularColor: Oasis.colorToGui((material as PBRSpecularMaterial).specularColor),\n        baseTexture: material.baseTexture ? \"origin\" : \"\",\n        roughnessMetallicTexture: (material as PBRMaterial).roughnessMetallicTexture ? \"origin\" : \"\",\n        normalTexture: (material as PBRBaseMaterial).normalTexture ? \"origin\" : \"\",\n        emissiveTexture: (material as PBRBaseMaterial).emissiveTexture ? \"origin\" : \"\",\n        occlusionTexture: (material as PBRBaseMaterial).occlusionTexture ? \"origin\" : \"\",\n        specularGlossinessTexture: (material as PBRSpecularMaterial).specularGlossinessTexture ? \"origin\" : \"\"\n      };\n\n      const originTexture = {\n        baseTexture: material.baseTexture,\n        roughnessMetallicTexture: (material as PBRMaterial).roughnessMetallicTexture,\n        normalTexture: (material as PBRBaseMaterial).normalTexture,\n        emissiveTexture: (material as PBRBaseMaterial).emissiveTexture,\n        occlusionTexture: (material as PBRBaseMaterial).occlusionTexture,\n        specularGlossinessTexture: (material as PBRSpecularMaterial).specularGlossinessTexture\n      };\n\n      const f = folder.addFolder(\n        folderName[material.name] ? `${material.name}_${folderName[material.name] + 1}` : material.name\n      );\n\n      folderName[material.name] = folderName[material.name] == null ? 1 : folderName[material.name] + 1;\n\n      // metallic\n      if (material instanceof PBRMaterial) {\n        const mode1 = f.addFolder(\"Metallic-Roughness props\");\n        mode1.add(material, \"metallic\", 0, 1).step(0.01);\n        mode1.add(material, \"roughness\", 0, 1).step(0.01);\n        mode1\n          .add(state, \"roughnessMetallicTexture\", [\"None\", \"origin\", ...Object.keys(this.textures)])\n          .onChange((v) => {\n            material.roughnessMetallicTexture =\n              v === \"None\" ? null : this.textures[v] || originTexture.roughnessMetallicTexture;\n          });\n        mode1.open();\n      }\n      // specular\n      else if (material instanceof PBRSpecularMaterial) {\n        const mode2 = f.addFolder(\"Specular-Glossiness props\");\n        mode2.add(material, \"glossiness\", 0, 1).step(0.01);\n        mode2.addColor(state, \"specularColor\").onChange((v) => {\n          Oasis.guiToColor(v, material.specularColor);\n        });\n        mode2\n          .add(state, \"specularGlossinessTexture\", [\"None\", \"origin\", ...Object.keys(this.textures)])\n          .onChange((v) => {\n            material.specularGlossinessTexture =\n              v === \"None\" ? null : this.textures[v] || originTexture.specularGlossinessTexture;\n          });\n        mode2.open();\n      } else if (material instanceof UnlitMaterial) {\n        f.add(state, \"baseTexture\", [\"None\", \"origin\", ...Object.keys(this.textures)]).onChange((v) => {\n          material.baseTexture = v === \"None\" ? null : this.textures[v] || originTexture.baseTexture;\n        });\n\n        f.addColor(state, \"baseColor\").onChange((v) => {\n          Oasis.guiToColor(v, material.baseColor);\n        });\n      }\n\n      // common\n      if (!(material instanceof UnlitMaterial)) {\n        const common = f.addFolder(\"Common props\");\n\n        common\n          .add(state, \"opacity\", 0, 1)\n          .step(0.01)\n          .onChange((v) => {\n            material.baseColor.a = v;\n          });\n        common.add(material, \"isTransparent\");\n        common.add(material, \"alphaCutoff\", 0, 1).step(0.01);\n\n        common.addColor(state, \"baseColor\").onChange((v) => {\n          Oasis.guiToColor(v, material.baseColor);\n        });\n        common.addColor(state, \"emissiveColor\").onChange((v) => {\n          Oasis.guiToColor(v, material.emissiveColor);\n        });\n        common.add(state, \"baseTexture\", [\"None\", \"origin\", ...Object.keys(this.textures)]).onChange((v) => {\n          material.baseTexture = v === \"None\" ? null : this.textures[v] || originTexture.baseTexture;\n        });\n        common.add(state, \"normalTexture\", [\"None\", \"origin\", ...Object.keys(this.textures)]).onChange((v) => {\n          material.normalTexture = v === \"None\" ? null : this.textures[v] || originTexture.normalTexture;\n        });\n        common.add(state, \"emissiveTexture\", [\"None\", \"origin\", ...Object.keys(this.textures)]).onChange((v) => {\n          material.emissiveTexture = v === \"None\" ? null : this.textures[v] || originTexture.emissiveTexture;\n        });\n        common.add(state, \"occlusionTexture\", [\"None\", \"origin\", ...Object.keys(this.textures)]).onChange((v) => {\n          material.occlusionTexture = v === \"None\" ? null : this.textures[v] || originTexture.occlusionTexture;\n        });\n        common.open();\n      }\n    });\n\n    folder.open();\n  }\n\n  loadAnimationGUI(animations: AnimationClip[]) {\n    if (this.animationFolder) {\n      this.gui.removeFolder(this.animationFolder);\n      this.animationFolder = null;\n    }\n\n    if (animations?.length) {\n      this.animationFolder = this.gui.addFolder(\"Animation\");\n      this.animationFolder.open();\n      const animator = this.gltfRootEntity.getComponent(Animator);\n      animator.play(animations[0].name);\n      const state = {\n        animation: animations[0].name\n      };\n      this.animationFolder\n        .add(state, \"animation\", [\"None\", ...animations.map((animation) => animation.name)])\n        .onChange((name) => {\n          if (name === \"None\") {\n            animator.speed = 0;\n          } else {\n            animator.speed = 1;\n            animator.play(name);\n          }\n        });\n    }\n  }\n}\n\nexport default function GLTFView(props: any) {\n  useEffect(() => {\n    let oasis: Oasis;\n    const scripts = [\n      { dom: null, url: \"https://gw.alipayobjects.com/os/lib/dat.gui/0.7.7/build/dat.gui.min.js\" },\n      {\n        dom: null,\n        url: \"https://gw.alipayobjects.com/os/lib/simple-dropzone/0.8.1/dist/simple-dropzone.umd.js\"\n      }\n    ];\n    Promise.all(\n      scripts.map((item) => {\n        return new Promise((resolve) => {\n          const script = document.createElement(\"script\");\n          script.type = \"text/javascript\";\n          document.body.appendChild(script);\n\n          script.onload = () => {\n            resolve(undefined);\n          };\n\n          script.src = item.url;\n          item.dom = script;\n        });\n      })\n    ).then(() => {\n      oasis = new Oasis();\n    });\n\n    return () => {\n      scripts.forEach((script) => {\n        document.body.removeChild(script.dom);\n      });\n      oasis.gui.destroy();\n      oasis.engine.destroy();\n    };\n  });\n  return (\n    <>\n      <WrapperLayout {...props}>\n        <div className=\"page-gltf-view\">\n          <canvas id=\"canvas-gltf-viewer\" style={{ width: \"100%\", height: \"calc(100vh - 64px)\" }} />\n          <div id=\"dropZone\" className=\"dropZone\">\n            <img\n              className=\"upload\"\n              src=\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*-sHKTYv5U94AAAAAAAAAAAAAARQnAQ\"\n            />\n            <input id=\"input\" type=\"file\" className=\"input\" multiple />\n            <p>Drop your glTF2.0、images、HDRs here!</p>\n          </div>\n          <div id=\"spinner\" className=\"spinner hide\" />\n          <script type=\"module\" src=\"./src/index.ts\" />\n        </div>\n      </WrapperLayout>\n    </>\n  );\n}\n","/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/pages/index.tsx",[],"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/static/style.js",[],"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/templates/api.tsx",[],"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/templates/docs.tsx",[],"/Users/zhanyingwei/Desktop/oasis-engine.github.io/src/templates/playground.tsx",["244"],"import React, { useEffect } from 'react';\nimport siteConfig from '../../siteconfig.json';\nimport \"regenerator-runtime/runtime\";\n\ninterface IScript {\n  libs: any;\n  playground: string;\n}\n\nconst useScript = (s: IScript) => {\n  useEffect(() => {\n    const promises: Promise<any>[] = [];\n    const scripts: any[] = [];\n\n    const addLib = (lib: any): Promise<any> => {\n      const promise = new Promise((resolve) => {\n        if (lib.cdn) {\n          const script = document.createElement('script');\n          script.type = \"text/javascript\";\n          document.body.appendChild(script);\n\n          script.onload = () => {\n            scripts.push(script);\n            resolve(script);\n          }\n\n          script.src = lib.cdn;\n        }\n\n      });\n\n      return promise;\n    }\n\n    addLib(s.libs['oasis-engine']).then(() => {\n      Object.keys(s.libs).forEach(name => {\n        if (name !== 'oasis-engine') {\n          const lib = s.libs[name];\n          let promise;\n\n          // child packages\n          if (lib.packages) {\n            const childPromises = [];\n            for(const name in lib.packages) {\n              childPromises.push(addLib(lib.packages[name]));\n            }\n            promise = Promise.all(childPromises).then(() => addLib(lib));\n          }\n          else {\n            promise = addLib(lib)\n          }\n\n          promises.push(promise);\n        }\n      });\n\n      Promise.all(promises).then(() => {\n        const script = document.createElement('script');\n        if (s.playground) {\n          script.text = s.playground;\n          document.body.appendChild(script);\n          scripts.push(script);\n          // console.log(s.playground)\n        }\n      });\n    });\n\n\n    return () => {\n      scripts.forEach((script) => {\n        document.body.removeChild(script);\n      });\n    }\n  }, [s]);\n};\n\nexport default function Playground(props: any) {\n  const { content } = props.pageContext.node.internal;\n\n  useScript({\n    libs: siteConfig.packages,\n    playground: content\n  });\n\n  return (\n    <>\n      <canvas id=\"canvas\" style={{ width: '100vw', height: '100vh' }} />\n    </>\n  );\n}",{"ruleId":"245","severity":1,"message":"246","line":7,"column":5,"nodeType":"247","messageId":"248","endLine":7,"endColumn":9},{"ruleId":"249","message":"250","line":1,"column":1,"endLine":1,"endColumn":57,"severity":2,"nodeType":null},{"ruleId":"245","severity":1,"message":"246","line":118,"column":5,"nodeType":"247","messageId":"248","endLine":118,"endColumn":9},{"ruleId":"245","severity":1,"message":"246","line":145,"column":9,"nodeType":"247","messageId":"248","endLine":145,"endColumn":13},{"ruleId":"245","severity":1,"message":"246","line":160,"column":17,"nodeType":"247","messageId":"248","endLine":160,"endColumn":21},{"ruleId":"245","severity":1,"message":"246","line":174,"column":23,"nodeType":"247","messageId":"248","endLine":174,"endColumn":27},{"ruleId":"245","severity":1,"message":"246","line":184,"column":67,"nodeType":"247","messageId":"248","endLine":184,"endColumn":71},{"ruleId":"245","severity":1,"message":"246","line":184,"column":94,"nodeType":"247","messageId":"248","endLine":184,"endColumn":98},{"ruleId":"245","severity":1,"message":"246","line":243,"column":14,"nodeType":"247","messageId":"248","endLine":243,"endColumn":18},{"ruleId":"245","severity":1,"message":"246","line":243,"column":41,"nodeType":"247","messageId":"248","endLine":243,"endColumn":45},{"ruleId":"245","severity":1,"message":"246","line":294,"column":47,"nodeType":"247","messageId":"248","endLine":294,"endColumn":51},{"ruleId":"245","severity":1,"message":"246","line":297,"column":9,"nodeType":"247","messageId":"248","endLine":297,"endColumn":13},{"ruleId":"245","severity":1,"message":"246","line":299,"column":22,"nodeType":"247","messageId":"248","endLine":299,"endColumn":26},{"ruleId":"245","severity":1,"message":"246","line":310,"column":9,"nodeType":"247","messageId":"248","endLine":310,"endColumn":13},{"ruleId":"251","severity":1,"message":"252","line":352,"column":27,"nodeType":"253","messageId":"254","endLine":352,"endColumn":49},{"ruleId":"251","severity":1,"message":"252","line":352,"column":51,"nodeType":"253","messageId":"254","endLine":352,"endColumn":71},{"ruleId":"255","severity":2,"message":"256","line":9,"column":5,"nodeType":"257","messageId":"258","endLine":9,"endColumn":64,"fix":"259"},{"ruleId":"255","severity":2,"message":"256","line":21,"column":11,"nodeType":"257","messageId":"258","endLine":21,"endColumn":47,"fix":"260"},{"ruleId":"261","severity":1,"message":"262","line":2,"column":1,"nodeType":"263","messageId":"264","endLine":2,"endColumn":113,"fix":"265"},{"ruleId":"245","severity":1,"message":"246","line":128,"column":5,"nodeType":"247","messageId":"248","endLine":128,"endColumn":9},{"ruleId":"245","severity":1,"message":"246","line":132,"column":5,"nodeType":"247","messageId":"248","endLine":132,"endColumn":9},{"ruleId":"245","severity":1,"message":"246","line":138,"column":5,"nodeType":"247","messageId":"248","endLine":138,"endColumn":9},{"ruleId":"245","severity":1,"message":"246","line":144,"column":5,"nodeType":"247","messageId":"248","endLine":144,"endColumn":9},{"ruleId":"245","severity":1,"message":"246","line":170,"column":9,"nodeType":"247","messageId":"248","endLine":170,"endColumn":13},{"ruleId":"245","severity":1,"message":"246","line":177,"column":9,"nodeType":"247","messageId":"248","endLine":177,"endColumn":13},{"ruleId":"245","severity":1,"message":"246","line":183,"column":7,"nodeType":"247","messageId":"248","endLine":183,"endColumn":11},{"ruleId":"245","severity":1,"message":"246","line":187,"column":7,"nodeType":"247","messageId":"248","endLine":187,"endColumn":11},{"ruleId":"255","severity":2,"message":"256","line":14,"column":7,"nodeType":"257","messageId":"258","endLine":14,"endColumn":94,"fix":"266"},{"ruleId":"255","severity":2,"message":"256","line":12,"column":20,"nodeType":"257","messageId":"258","endLine":12,"endColumn":94,"fix":"267"},{"ruleId":"249","message":"250","line":1,"column":1,"endLine":1,"endColumn":64,"severity":2,"nodeType":null},{"ruleId":"261","severity":1,"message":"268","line":7,"column":1,"nodeType":"263","messageId":"264","endLine":34,"endColumn":23,"fix":"269"},{"ruleId":"245","severity":1,"message":"246","line":63,"column":18,"nodeType":"247","messageId":"248","endLine":63,"endColumn":22},{"ruleId":"245","severity":1,"message":"246","line":64,"column":52,"nodeType":"247","messageId":"248","endLine":64,"endColumn":56},{"ruleId":"245","severity":1,"message":"246","line":67,"column":24,"nodeType":"247","messageId":"248","endLine":67,"endColumn":28},{"ruleId":"245","severity":1,"message":"246","line":68,"column":26,"nodeType":"247","messageId":"248","endLine":68,"endColumn":30},{"ruleId":"245","severity":1,"message":"246","line":69,"column":28,"nodeType":"247","messageId":"248","endLine":69,"endColumn":32},{"ruleId":"245","severity":1,"message":"246","line":70,"column":26,"nodeType":"247","messageId":"248","endLine":70,"endColumn":30},{"ruleId":"245","severity":1,"message":"246","line":71,"column":26,"nodeType":"247","messageId":"248","endLine":71,"endColumn":30},{"ruleId":"245","severity":1,"message":"246","line":74,"column":20,"nodeType":"247","messageId":"248","endLine":74,"endColumn":24},{"ruleId":"245","severity":1,"message":"246","line":75,"column":29,"nodeType":"247","messageId":"248","endLine":75,"endColumn":33},{"ruleId":"245","severity":1,"message":"246","line":76,"column":25,"nodeType":"247","messageId":"248","endLine":76,"endColumn":29},{"ruleId":"245","severity":1,"message":"246","line":77,"column":25,"nodeType":"247","messageId":"248","endLine":77,"endColumn":29},{"ruleId":"270","severity":2,"message":"271","line":314,"column":19,"nodeType":"272","messageId":"273","endLine":314,"endColumn":24,"fix":"274"},{"ruleId":"275","severity":2,"message":"276","line":44,"column":23,"nodeType":"272","messageId":"277","endLine":44,"endColumn":27},"@typescript-eslint/no-invalid-this","Unexpected 'this'.","ThisExpression","unexpectedThis","eslint-comments/disable-enable-pair","Definition for rule 'eslint-comments/disable-enable-pair' was not found.","react/jsx-key","Missing \"key\" prop for element in array","JSXElement","missingArrayKey","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"278","text":"279"},{"range":"280","text":"279"},"@typescript-eslint/consistent-type-imports","Imports \"AmbientLight\" and \"GLTFResource\" are only used as types.","ImportDeclaration","someImportsAreOnlyTypes",{"range":"281","text":"282"},{"range":"283","text":"279"},{"range":"284","text":"279"},"Imports \"AmbientLight\", \"AnimationClip\", \"Entity\", \"GLTFResource\", \"Material\", \"Renderer\", \"Scene\", \"Texture2D\" and \"TextureCube\" are only used as types.",{"range":"285","text":"286"},"prefer-const","'index' is never reassigned. Use 'const' instead.","Identifier","useConst",{"range":"287","text":"288"},"@typescript-eslint/no-shadow","'name' is already declared in the upper scope.","noShadow",[294,294]," rel=\"noreferrer\"",[662,662],[63,130],"import type { AmbientLight, GLTFResource} from \"oasis-engine\";\nimport { AssetType, Camera, DirectLight",[544,544],[445,445],[347,697],"import type {\n  AmbientLight,\n  AnimationClip,\n  Entity,\n  GLTFResource,\n  Material,\n  Renderer,\n  Scene,\n  Texture2D,\n  TextureCube} from \"oasis-engine\";\nimport {\n  Animator,\n  AssetType,\n  BackgroundMode,\n  BoundingBox,\n  Camera,\n  Color,\n  DirectLight,\n  MeshRenderer,\n  PBRBaseMaterial,\n  PBRMaterial,\n  PBRSpecularMaterial,\n  PrimitiveMesh,\n  SkyBoxMaterial,\n  SphericalHarmonics3",[9204,9237],"const index = uri.lastIndexOf(\"/\");"]