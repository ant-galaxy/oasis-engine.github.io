(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{494:function(n,e,o){"use strict";o.r(e),e.default='/**\n * \u672c\u793a\u4f8b\u5c55\u793a\u5982\u4f55\u4f7f\u7528\u51e0\u4f55\u4f53\u6e32\u67d3\u5668\u529f\u80fd\u3001\u5982\u4f55\u521b\u5efa\u51e0\u4f55\u4f53\u8d44\u6e90\u5bf9\u8c61\u3001\u5982\u4f55\u521b\u5efa\u6750\u8d28\u5bf9\u8c61\n */\nimport { FreeControl } from "@oasis-engine/controls";\nimport {\n  Camera,\n  BlinnPhongMaterial,\n  MeshRenderer,\n  MeshTopology,\n  WebGLEngine,\n  Color,\n  PrimitiveMesh\n} from "oasis-engine";\n\nconst engine = new WebGLEngine("o3-demo");\nengine.canvas.resizeByClientSize();\nconst scene = engine.sceneManager.activeScene;\nconst rootNode = scene.createRootEntity("root");\n\n// \u5728\u573a\u666f\u4e2d\u521b\u5efa\u76f8\u673a\u8282\u70b9\u3001\u914d\u7f6e\u4f4d\u7f6e\u548c\u76ee\u6807\u65b9\u5411\nconst cameraNode = rootNode.createChild("camera_node");\ncameraNode.transform.setPosition(0, 0, 20);\n\nconst camera = cameraNode.addComponent(Camera);\ncamera.farClipPlane = 2000;\n\nconst controler = cameraNode.addComponent(FreeControl);\ncontroler.movementSpeed = 100;\ncontroler.rotateSpeed = 1;\n\nconst cuboid = PrimitiveMesh.createCuboid(engine, 50, 50, 50);\nconst material = new BlinnPhongMaterial(engine);\nmaterial.emissiveColor = new Color(0.5, 0.6, 0.6, 1);\n\nconst groundGeometry = PrimitiveMesh.createPlane(engine, 2000, 2000, 100, 100);\ngroundGeometry.subMesh.topology = MeshTopology.LineStrip;\nconst groundMaterial = new BlinnPhongMaterial(engine);\ngroundMaterial.emissiveColor = new Color(1, 1, 1, 1);\n\n// create meshes in scene\nfor (let i = 0; i < 100; i++) {\n  let cube = rootNode.createChild("cube");\n  cube.transform.setPosition(Math.random() * 2000 - 1000, Math.random() * 200, Math.random() * 2000 - 1000);\n  const cubeRenderer = cube.addComponent(MeshRenderer);\n  cubeRenderer.mesh = cuboid;\n  cubeRenderer.setMaterial(material);\n}\n\n// Ground\nconst ground = rootNode.createChild("ground");\nground.transform.setPosition(0, -25, 0);\nground.transform.rotate(-90, 0, 0);\nconst groundRender = ground.addComponent(MeshRenderer);\ngroundRender.mesh = groundGeometry;\ngroundRender.setMaterial(groundMaterial);\n\n// Run engine\nengine.run();\n'}}]);