(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{510:function(n,e,t){"use strict";t.r(e),e.default='import { OrbitControl } from "@oasis-engine/controls";\nimport { AssetType, Camera, Entity, Sprite, SpriteRenderer, SystemInfo, Texture2D, WebGLEngine } from "oasis-engine";\n\n// Create engine object.\nconst engine = new WebGLEngine("o3-demo");\nengine.canvas.width = window.innerWidth * SystemInfo.devicePixelRatio;\nengine.canvas.height = window.innerHeight * SystemInfo.devicePixelRatio;\n\n// Create root entity.\nconst rootEntity = engine.sceneManager.activeScene.createRootEntity();\n\n// Create camera.\nconst cameraEntity = rootEntity.createChild("Camera");\ncameraEntity.transform.setPosition(0, 0, 50);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\nengine.resourceManager\n  .load<Texture2D>({\n    url: "https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*KjnzTpE8LdAAAAAAAAAAAAAAARQnAQ",\n    type: AssetType.Texture2D\n  })\n  .then((texture) => {\n    // Create origin sprite entity.\n    const spriteEntity = new Entity(engine, "spriteFlip");\n    const spriteRenderer = spriteEntity.addComponent(SpriteRenderer);\n    spriteRenderer.sprite = new Sprite(engine, texture);\n\n    // Display mormal.\n    addFlipEntity(spriteEntity, -15, false, false);\n    // Display flip x.\n    addFlipEntity(spriteEntity.clone(), -5, true, false);\n    // Display flip y.\n    addFlipEntity(spriteEntity.clone(), 5, false, true);\n    // Display flip x and y.\n    addFlipEntity(spriteEntity.clone(), 15, true, true);\n  });\n\nengine.run();\n\n/**\n * Add flip entity.\n */\nfunction addFlipEntity(entity: Entity, posX: number, flipX: boolean, flipY: boolean): void {\n  rootEntity.addChild(entity);\n  entity.transform.setPosition(posX, 0, 0);\n  const flipRenderer = entity.getComponent(SpriteRenderer);\n  flipRenderer.flipX = flipX;\n  flipRenderer.flipY = flipY;\n}\n'}}]);