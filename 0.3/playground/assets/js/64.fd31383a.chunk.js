(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{493:function(n,e,o){"use strict";o.r(e),e.default='import * as o3 from "oasis-engine";\nimport * as dat from "dat.gui";\n\nconst engine = new o3.WebGLEngine("o3-demo");\nengine.canvas.resizeByClientSize();\nconst rootEntity = engine.sceneManager.activeScene.createRootEntity();\n\n// init camera\nconst cameraEntity = rootEntity.createChild("camera");\nconst camera = cameraEntity.addComponent(o3.Camera);\nconst pos = cameraEntity.transform.position;\npos.setValue(10, 10, 10);\ncameraEntity.transform.position = pos;\ncameraEntity.transform.lookAt(new o3.Vector3(0, 0, 0));\n\n// init light\nconst light = rootEntity.addComponent(o3.AmbientLight);\nlight.intensity = 1.2;\n\n// init cube\nconst cubeEntity = rootEntity.createChild("cube");\nconst renderer = cubeEntity.addComponent(o3.MeshRenderer);\nrenderer.mesh = o3.PrimitiveMesh.createCuboid(engine, 1, 1, 1);\nconst material = new o3.BlinnPhongMaterial(engine);\nmaterial.baseColor = new o3.Color(1, 0.25, 0.25, 1);\nrenderer.setMaterial(material);\n\nengine.run();\n\nfunction addGUI() {\n  const gui = new dat.GUI();\n  const cameraFolder = gui.addFolder("camera cullingMask");\n  cameraFolder.open();\n  const constMap = {\n    EveryThing: o3.Layer.Everything,\n    Layer1: o3.Layer.Layer1,\n    Layer2: o3.Layer.Layer2,\n    Layer3: o3.Layer.Layer3\n  };\n  const cameraController = cameraFolder.add({ cullingMask: "EveryThing" }, "cullingMask", Object.keys(constMap));\n  cameraController.onChange((v) => {\n    camera.cullingMask = constMap[v];\n  });\n\n  const boxFolder = gui.addFolder("box layer");\n  boxFolder.open();\n  const boxController = boxFolder.add({ layer: "EveryThing" }, "layer", Object.keys(constMap));\n  boxController.onChange((v) => {\n    renderer.entity.layer = constMap[v];\n  });\n}\n\naddGUI();\n'}}]);